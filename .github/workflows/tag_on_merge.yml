name: Tag on merge

on:
  pull_request:
    types:
      - closed

jobs:
  criando-tag-e-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create Tag
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "LAST_TAG=$LAST_TAG"
            BASE_STRING=$(echo $LAST_TAG | grep -oP '\d+$')
            PREFIX=$(echo $LAST_TAG | grep -oP '^.+(?=\d+$)')
            NEW_TAG="$PREFIX$((BASE_STRING + 1))"
            echo "NEW_TAG=$NEW_TAG"
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
            git tag $NEW_TAG ${{ github.event.pull_request.merge_commit_sha }}
            git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }} --tags
          fi
      - name: Draft release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publicando-pre-release:
    needs: criando-tag-e-pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Publish draft as pre-release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const draftRelease = await github.repos.listReleases({
              owner,
              repo,
            }).then(releases => releases.data.find(release => release.draft))

            if (!draftRelease) {
              console.log('No draft release found')
              return
            }

            await github.repos.updateRelease({
              owner,
              repo,
              release_id: draftRelease.id,
              draft: false,
              prerelease: true,
            })
