name: Tag on merge

on:
  pull_request:
    types:
      - closed

jobs:
  criando-tag-e-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Tag
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            LAST_TAG=$(git tag | sort -V | tail -n 1)
            echo "LAST_TAG=$LAST_TAG"
            BASE_STRING=$(echo $LAST_TAG | grep -oP '\d+$')
            PREFIX=$(echo $LAST_TAG | grep -oP '^.+(?=\d+$)')
            NEW_TAG="$PREFIX$((BASE_STRING + 1))"
            echo "NEW_TAG=$NEW_TAG"
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
            git tag $NEW_TAG ${{ github.event.pull_request.merge_commit_sha }}
            git push --set-upstream https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }} --tags
          fi

      - name: Wait for tag to be published
        run: sleep 45

      - name: Draft release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publicando-pre-release:
    needs: criando-tag-e-pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Verificar se a tag existe
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const newTag = process.env.NEW_TAG
            let release
            try {
              release = await github.repos.getReleaseByTag({
                owner,
                repo,
                tag: newTag,
              })
            } catch (error) {
              if (error.status === 404) {
                console.log(`Tag ${newTag} ainda não está disponível. Tentando novamente em 30 segundos...`)
                await new Promise(resolve => setTimeout(resolve, 30000))
                release = await github.repos.getReleaseByTag({
                  owner,
                  repo,
                  tag: newTag,
                })
              } else {
                throw error
              }
            }

            if (!release) {
              console.log(`Nenhuma release encontrada para a tag ${newTag}`)
              return
            }

            await github.repos.updateRelease({
              owner,
              repo,
              release_id: release.data.id,
              draft: false,
              prerelease: true,
            })
